name: Deploy to TestPyPI and PyPI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test dependencies
        run: |
          pip install pytest

      - name: Increment version
        id: version
        run: |
          export VERSION=$(cat VERSION)
          export NEW_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo $NEW_VERSION > VERSION
          sed -i "s/version=\"[0-9]*\.[0-9]*\.[0-9]*\"/version=\"$NEW_VERSION\"/" setup.py
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Create Version Update PR
        uses: peter-evans/create-pull-request@v3
        id: create_pr
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: bump version to ${{ steps.version.outputs.new_version }}'
          branch: update-version-${{ steps.version.outputs.new_version }}
          title: "chore: bump version to ${{ steps.version.outputs.new_version }}"
          body: "This PR bumps the version to ${{ steps.version.outputs.new_version }}."
          
      - name: Approve PR
        if: success() && github.event_name == 'push'
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/${{ github.repository }}/pulls/${{ steps.create_pr.outputs.number }}/reviews/approvals
          headers: |
            Authorization: token ${{ secrets.GITHUB_TOKEN }}
            Accept: application/vnd.github.v3+json
          body: |
            {
              "event": "APPROVE"
            }

      - name: Build and test
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          python setup.py sdist bdist_wheel
          pip install .
          make test

      - name: Deploy to TestPyPI
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u ${{ secrets.TEST_PYPI_USER_AGENT }}

      - name: Test from TestPyPI
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple my-package

      - name: Deploy to PyPI
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          twine upload dist/* -u ${{ secrets.PYPI_USER_AGENT }}
