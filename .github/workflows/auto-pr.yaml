name: "ðŸ”„ Auto PR"

on:
  # Push to all but main and master
  push:
    branches-ignore:
      - main
      - master
  workflow_dispatch:

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0  # Fetch all branches
    - name: Cache APT packages
      uses: actions/cache@v4.0.2
      with:
        key: ${{ runner.os }}-apt
        path: /var/cache/apt
        restore-keys: ${{ runner.os }}-apt-
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gh
    - name: Install dependencies
      run: |
        make install
    - name: Authenticate with GitHub CLI
      env:
        GH_TOKEN: ""
      run: |
        unset GH_TOKEN
        GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
        gh auth status
    - name: Set up environment variables
      run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    - name: Create or Update Pull Request
      run: |
        pip install -e .
        PR_URL=$(gh pr list --json url --jq '.[0].url' || echo "")
        if [ -z "$PR_URL" ]; then
          # No PR exists, create one
          PR_TITLE=$(pr-title-generate)
          PR_BODY=$(pr-body-generate)
          gh pr create --base main --head ${{ github.ref }} --title "$PR_TITLE" --body "This PR is automatically created for the new branch ${{ github.ref }} created by @${{ github.actor }}.\n\n**Changes:**\n${{ steps.commit_messages.outputs.commits }}\n\n${PR_BODY}"
        else
          # PR exists, update it
          # Get the existing PR body
          EXISTING_BODY=$(gh pr view $PR_URL --json body --jq '.body')
          # Check if the PR body is broken
          if [[ "$EXISTING_BODY" == *"No conventional commits found."* ]]; then
            echo "Regenerating PR body as it has a broken body."
            PR_TITLE=$(pr-title-generate)
            PR_BODY=$(pr-body-generate)
            NEW_BODY="REGENERATED: This PR is automatically created for the new branch ${{ github.ref }}.\n\n**Changes:**\n${{ steps.commit_messages.outputs.commits }}\n\n${PR_BODY}"
            gh pr edit $PR_URL --title "$PR_TITLE" --body "$NEW_BODY"
          else
            PR_TITLE=$(pr-title-generate)
            PR_BODY=$(pr-body-generate)
            UPDATED_BODY="$EXISTING_BODY\n${{ steps.commit_messages.outputs.commits }}\n\n${PR_BODY}"
            gh pr edit $PR_URL --title "$PR_TITLE" --body "$UPDATED_BODY"
          fi
        fi
