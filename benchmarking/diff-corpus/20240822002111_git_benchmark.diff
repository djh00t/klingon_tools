diff --git a/.github/workflows/full-release.yaml b/.github/workflows/full-release.yaml
index deabbf8..b3cace2 100644
--- a/.github/workflows/full-release.yaml
+++ b/.github/workflows/full-release.yaml
@@ -16,41 +16,18 @@ jobs:
         with:
           fetch-depth: 0

-      - name: Set up Node.js
-        uses: actions/setup-node@v4
-        with:
-          node-version: "22.4.1"
-
-      - name: Load Node.js cache
-        uses: actions/cache@v4.0.2
-        with:
-          path: ~/.npm
-          key: ${{ runner.os }}-node-cache
-          restore-keys: |
-            ${{ runner.os }}-node-cache-
-
-      - name: Install Node.js dependencies
-        run: |
-          npm install
-
       - name: Set up Python
         uses: actions/setup-python@v5
         with:
           python-version: "3.x"

-      - name: Load Python cache
-        uses: actions/cache@v4.0.2
-        with:
-          path: ~/.cache/pip
-          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
-          restore-keys: |
-                ${{ runner.os }}-pip-cache-${{ hashFiles('**/requirements.in') }}
-                ${{ runner.os }}-pip-cache-
+      - name: Install Poetry
+        run: |
+          curl -sSL https://install.python-poetry.org | python3 -

-      - name: Install Python dependencies
+      - name: Install dependencies
         run: |
-          python -m pip install --upgrade pip
-          pip install setuptools wheel twine packaging build toml
+          poetry install

       - name: Authenticate GitHub CLI
         run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
@@ -64,20 +41,17 @@ jobs:
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           PYPI_USER_AGENT: ${{ secrets.PYPI_USER_AGENT }}
-        run: ./.github/workflows/semantic-release.sh
+        run: |
+          poetry run semantic-release version
+          poetry run semantic-release publish

-      - name: Upload to PyPI
+      - name: Build and publish
         env:
-          TWINE_USERNAME: "__token__"
-          TWINE_PASSWORD: ${{ secrets.PYPI_USER_AGENT }}
+          PYPI_TOKEN: ${{ secrets.PYPI_USER_AGENT }}
         run: |
-          python -m build
-          for i in {1..5}; do
-            twine upload dist/* && break || {
-              echo "Upload failed, retrying in 5 seconds..."
-              sleep 5
-            }
-          done
+          poetry config pypi-token.pypi $PYPI_TOKEN
+          poetry build
+          poetry publish

       - name: Update GitHub Release
         env:
